.. _version-numbers:

==================
Version Numbers
==================

.. default-domain:: mongodb

As you document features, you often need to reference a major or specific product release version to indicate when the feature became available, changed, or was deprecated.

Version references can help explain product behavior
related to a specific product release version.

With the exception of release notes and changelogs, which serve as historical
documents, avoid referencing product release versions that we no longer support.
For examples, when a release of MongoDB Server reaches End of Life (EOL), remove references to that release.


You can omit information about the following items:

* Features introduced in an EOL release are outdated.

* Features removed in an EOL release are unavailable in all supported releases.

* Features changed in an EOL release represent preexisting behavior in all supported releases.


Use the following guidelines to reference product versions so that
you can more easily find these references when the release reaches EOL.

General Guidelines
------------------

When you reference a specific product release version:

* Use version directives wherever possible for findability:

  .. code-block:: rst

     .. versionadded:: 6.0

  If a version reference needs more explanation, add the content 
  to the directive block:

  .. code-block:: rst

     .. versionchanged:: 4.4

        Starting in MongoDB 4.4, this command returns the following output:

  Snooty supports three version directives: ``versionadded``, 
  ``versionchanged``, and ``deprecated``.

  .. note::
      
     Include **only** a single version number in this directive. Multiple
     version numbers render incorrectly in HTML.

* To refer to a version inline, include the product
  name before the version number, (for example, ``MongoDB 5.0``).  This ensures that
  a search for version numbers correctly matches product and release.

* Do **not** reference versions freeform or with the phrase ``version X.X``.
  These references are much harder to identify programmatically as references to 
  a specific product version.

Identifying EOL Releases
------------------------

`versc <https://github.com/kennethdyer/versc>`__ is a tool for finding references
to EOL releases of products.  It operates similar to grep, performing a 
series of Regular Expression matches on each line of each file looking for
reStructuredText version directives and ``PRODUCT X.Y`` pairings. It then
extracts the version references from lines it finds and evaluates whether these
are legitimate version references versus references to unknown (read: EOL) releases.

For example:

.. code-block:: console

   $ versc source/core/ | grep 2d.txt
   2.2   -   source/core/2d.txt:22   <geospatial-legacy>` from MongoDB 2.2 or earlier, *and*
   2.2   -   source/core/2d.txt:17   <geospatial-legacy>` used in MongoDB 2.2 and earlier.

This output is not exhaustive (versc doesn't parse the reStructuedText, so it 
isn't reading include files), but does provide a starting point in identifying
references to EOL releases.

